{
  _pendingDirty: false,
  _hasOwnPendingAsyncValidator: false,
  _pendingTouched: false,
  _onCollectionChange: () => { ... },
  _parent: null,
  pristine: true,
  touched: false,
  _onDisabledChange: [],
  _rawValidators: null,
  _composedValidatorFn: null,
  _rawAsyncValidators: null,
  _composedAsyncValidatorFn: null,
  controls: {
    standard: FormControl {
      _pendingDirty: ...,
      _hasOwnPendingAsyncValidator: ...,
      _pendingTouched: ...,
      _onCollectionChange: ...,
      _parent: ...,
      pristine: ...,
      touched: ...,
      _onDisabledChange: ...,
      _rawValidators: ...,
      _composedValidatorFn: ...,
      _rawAsyncValidators: ...,
      _composedAsyncValidatorFn: ...,
      defaultValue: ...,
      _onChange: ...,
      _pendingChange: ...,
      _pendingValue: ...,
      value: ...,
      valueChanges: ...,
      statusChanges: ...,
      status: ...,
      errors: ...
    },
    value: FormControl {
      _pendingDirty: ...,
      _hasOwnPendingAsyncValidator: ...,
      _pendingTouched: ...,
      _onCollectionChange: ...,
      _parent: ...,
      pristine: ...,
      touched: ...,
      _onDisabledChange: ...,
      _rawValidators: ...,
      _composedValidatorFn: ...,
      _rawAsyncValidators: ...,
      _composedAsyncValidatorFn: ...,
      defaultValue: ...,
      _onChange: ...,
      _pendingChange: ...,
      _pendingValue: ...,
      value: ...,
      valueChanges: ...,
      statusChanges: ...,
      status: ...,
      errors: ...
    },
    operator: FormControl {
      _pendingDirty: ...,
      _hasOwnPendingAsyncValidator: ...,
      _pendingTouched: ...,
      _onCollectionChange: ...,
      _parent: ...,
      pristine: ...,
      touched: ...,
      _onDisabledChange: ...,
      _rawValidators: ...,
      _composedValidatorFn: ...,
      _rawAsyncValidators: ...,
      _composedAsyncValidatorFn: ...,
      defaultValue: ...,
      _onChange: ...,
      _pendingChange: ...,
      _pendingValue: ...,
      value: ...,
      valueChanges: ...,
      statusChanges: ...,
      status: ...,
      errors: ...
    },
    negate: FormControl {
      _pendingDirty: ...,
      _hasOwnPendingAsyncValidator: ...,
      _pendingTouched: ...,
      _onCollectionChange: ...,
      _parent: ...,
      pristine: ...,
      touched: ...,
      _onDisabledChange: ...,
      _rawValidators: ...,
      _composedValidatorFn: ...,
      _rawAsyncValidators: ...,
      _composedAsyncValidatorFn: ...,
      defaultValue: ...,
      _onChange: ...,
      _pendingChange: ...,
      _pendingValue: ...,
      value: ...,
      status: ...,
      errors: ...,
      valueChanges: ...,
      statusChanges: ...
    }
  },
  valueChanges: EventEmitter {
    closed: false,
    currentObservers: null,
    observers: [],
    isStopped: false,
    hasError: false,
    thrownError: null,
    __isAsync: false
  },
  statusChanges: EventEmitter {
    closed: false,
    currentObservers: null,
    observers: [],
    isStopped: false,
    hasError: false,
    thrownError: null,
    __isAsync: false
  },
  status: 'VALID',
  value: {
    standard: false,
    value: '',
    operator: 'Equals to',
    negate: false
  },
  errors: null
}
